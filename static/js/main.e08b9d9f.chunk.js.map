{"version":3,"sources":["Media/svgs/delete-button.svg","Components/PageHeader/PageHeader.js","Components/PageHeader/index.js","Components/ResetButton/ResetButton.js","Components/ResetButton/index.js","actions.js","Components/AddPlayer/AddPlayer.js","Components/AddPlayer/index.js","Components/CreatedPlayerList/CreatedPlayerList.js","Components/CreatedPlayerList/index.js","Components/GenerateTeamsButton/GenerateTeamsButton.js","Components/GenerateTeamsButton/index.js","Components/TeamsCustomisation/TeamsCustomisation.js","Components/TeamsCustomisation/index.js","Components/TeamsSetup/TeamsSetup.js","Components/TeamsSetup/index.js","Components/RandomisedTeams/RandomisedTeams.js","Components/RandomisedTeams/index.js","Components/PickedTeams/PickedTeams.js","Components/PickedTeams/index.js","App.js","Data/initial.js","Data/reducer.js","index.js","Media/svgs/soccer-ball.svg"],"names":["module","exports","PageHeader","playersPerSide","Jumbotron","className","src","football_svg","alt","connect","state","ResetButton","reset","Button","variant","onClick","dispatch","type","AddPlayer","props","name","handleChangeName","bind","handleSubmit","e","this","setState","currentTarget","value","preventDefault","makePlayer","players","Form","onSubmit","Group","Label","Control","onChange","style","display","length","Component","player_details","data","CreatedPlayerList","handleDelete","handleGenerate","deletePlayer","id","generateTeams","map","player","index","Card","key","delete_icon","GenerateTeamsButton","buttonText","TeamsCustomisation","handleChangeCompleteTeamOneColor","color","color_one","hex","handleChangeCompleteTeamTwoColor","color_two","team_one_name","team_two_name","customisation","handleChangePlayersPerSide","handleChangeTeamOneName","handleChangeTeamTwoName","handleClickCustomise","teamsCustomisation","step","xmlns","viewBox","points","fill","d","onChangeComplete","settings","Math","floor","TeamsSetup","teamsPicked","generateButtonText","RandomisedTeams","team1","team2","team_one_color","team_two_color","Table","PickedTeams","App","initial","reducer","action","addPlayer","filter","generatedTeams","setTeams","current_state","i","rand","random","randomPlayer","splice","randomTeams","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e08b9d9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete-button.0058d2b0.svg\";","import React from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport football_svg from '../../Media/svgs/soccer-ball.svg';\n\nconst PageHeader = ({ playersPerSide }) => (\n\n    <Jumbotron className=\"header_jumbotron\">\n        <div className=\"page_header\">\n            <img className=\"football_header_icon\" src={ football_svg } alt='Football SVG icon'/>\n            <div className=\"header_text\">\n                <h1>Football Team Picker</h1>\n                <h2>{ playersPerSide }-a-side</h2>\n            </div>\n            <img className=\"football_header_icon\" src={ football_svg } alt='Football SVG icon'/>\n        </div>\n    </Jumbotron>\n\n);\n\nexport default PageHeader;","import { connect } from 'react-redux';\n\nimport PageHeader from './PageHeader';\n\nconst mapStateToProps = state => {\n    return {\n        playersPerSide: state.playersPerSide\n    };\n};\n\nexport default connect(mapStateToProps)(PageHeader);","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst ResetButton = ({ reset }) => (\n\n    <Button\n        variant=\"light\"\n        onClick={ reset }\n    >\n        Reset\n    </Button>\n\n);\n\nexport default ResetButton;","import { connect } from \"react-redux\";\n\nimport { reset } from '../../actions';\n\nimport ResetButton from './ResetButton';\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        reset: () => dispatch(reset())\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(ResetButton);","export const addPlayer = (data) => {\n    return {\n        type: \"addPlayer\",\n        data: data\n    };\n};\n\nexport const reset = () => {\n    return {\n        type: \"reset\"\n    };\n};\n\nexport const deletePlayer = (id) => {\n    return {\n        type: \"deletePlayer\",\n        id: id\n    };\n};\n\nexport const generateTeams = () => {\n    return {\n        type: \"generateTeams\"\n    };\n};\n\nexport const teamsCustomisation = ({ playersPerSide, color_one, color_two, team_one_name, team_two_name }) =>{\n    return {\n    type: \"teamsCustomisation\",\n    playersPerSide: Math.floor(playersPerSide),\n    color_one: color_one,\n    color_two: color_two,\n    team_one_name: team_one_name,\n    team_two_name: team_two_name\n    }\n}","import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport ResetButton from '../ResetButton';\n\nclass AddPlayer extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state={\n            name:''\n        }\n\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleChangeName(e) {\n        this.setState({ name: e.currentTarget.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.name !== \"\"){\n            this.props.makePlayer(this.state);\n\n            this.setState({\n                name: \"\",\n            });\n        }\n    }\n\n    render(){\n\n        let { players, playersPerSide } = this.props;\n\n        return(\n            <Form onSubmit={ this.handleSubmit }>\n                <Form.Group>\n                    <Form.Label>Player Name</Form.Label>\n                    <Form.Control \n                        value= { this.state.name }\n                        type=\"text\"\n                        onChange={ this.handleChangeName }\n                    />\n                </Form.Group>\n                <div className=\"add_player_buttons\" style={ {display: players.length === (playersPerSide * 2) ? \"none\" : \"flex\" } }>\n                    <div className=\"add_player_info\">\n                        <Button \n                            variant=\"light\" \n                            type=\"submit\"\n                        >Add Player</Button>\n                        <p\n                            style={ { \n                                display: ((playersPerSide * 2) - players.length) > 0 ? \"flex\" : \"none\"  }}\n                        >\n                        Add { (playersPerSide * 2) - players.length } more player{ ((playersPerSide * 2) - players.length) === 1 ? '' : 's' }.\n                        </p>\n                    </div>\n                    <ResetButton/>\n                </div>\n                \n            </Form>\n        );\n    };\n\n};\n\nexport default AddPlayer;","import { connect } from \"react-redux\";\n\nimport { addPlayer } from '../../actions';\n\nimport AddPlayer from './AddPlayer';\n\nconst mapStateToProps = state => {\n    return{\n        players: state.players,\n        playersPerSide: state.playersPerSide\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        makePlayer: player_details => dispatch(addPlayer(player_details))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPlayer);","import React, { Component } from 'react';\n\nimport { Card } from 'react-bootstrap';\n\nimport delete_icon from '../../Media/svgs/delete-button.svg';\n\n\nclass CreatedPlayerList extends Component{\n    \n    constructor(props){\n        super(props)\n\n        this.state={\n\n        }\n\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleGenerate = this.handleGenerate.bind(this);\n\n    }\n\n    handleDelete(e){ \n        this.props.deletePlayer(e.currentTarget.id);\n    }\n\n    handleGenerate(){\n        this.props.generateTeams();\n    }\n\n    render(){\n\n        let { players } = this.props;\n\n        return(\n            <div className ='created_players'>\n                { players.map ((player, index) => (\n                    <Card key={ index } className=\"player_card\">\n                        <div className=\"player_card_inner\">\n                            <p>{ player.name }</p>\n                            <img \n                                src={ delete_icon } \n                                className=\"delete_icon\"\n                                onClick={ this.handleDelete }\n                                alt='Delete icon'\n                                id={ player.name }\n                            />\n                        </div>\n                    </Card>\n                )) }\n            </div>\n        )\n    }\n}\n\nexport default CreatedPlayerList;","import { connect } from \"react-redux\";\n\nimport { deletePlayer } from '../../actions';\n\nimport CreatedPlayerList from './CreatedPlayerList';\n\nconst mapStateToProps = state => {\n    return {\n        players: state.players\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        deletePlayer: (id) => dispatch(deletePlayer(id)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreatedPlayerList);","import React from 'react';\n\nimport { Button } from 'react-bootstrap';\n\n\nconst GenerateTeamsButton = ({ players, generateTeams, buttonText, playersPerSide }) => (\n\n    <Button\n        variant=\"light\"\n        onClick={ generateTeams }\n        style={ { display: players.length === (playersPerSide * 2) ? \"flex\" : \"none\"} }>\n        { buttonText }\n    </Button>\n\n)\n\nexport default GenerateTeamsButton;","import { connect } from \"react-redux\";\n\nimport { generateTeams } from '../../actions';\n\nimport GenerateTeamsButton from './GenerateTeamsButton';\n\nconst mapStateToProps = state => {\n    return {\n        players: state.players,\n        playersPerSide: state.playersPerSide\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        generateTeams: () => dispatch(generateTeams())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GenerateTeamsButton);","import React, { Component } from 'react';\nimport { Form, Button, Jumbotron } from 'react-bootstrap';\nimport { SliderPicker } from 'react-color';\n\n// Component for customising players per side, team shirt colours and team names.\n// Doesn't display by default, the jumbotron needs to be clicked to show options (closed by saving settings or clicking header).\n// Saving passes data up to state which has default settings otherwise.\n\nclass TeamsCustomisation extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state={\n            playersPerSide: this.props.playersPerSide,\n            color_one: 'red',\n            color_two: 'blue',\n            team_one_name: 'Team 1',\n            team_two_name: 'Team 2',\n            customisation: false\n        }\n\n        this.handleChangePlayersPerSide = this.handleChangePlayersPerSide.bind(this);\n        this.handleChangeCompleteTeamOneColor = this.handleChangeCompleteTeamOneColor.bind(this);\n        this.handleChangeCompleteTeamTwoColor = this.handleChangeCompleteTeamTwoColor.bind(this);\n        this.handleChangeTeamOneName = this.handleChangeTeamOneName.bind(this);\n        this.handleChangeTeamTwoName = this.handleChangeTeamTwoName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickCustomise = this.handleClickCustomise.bind(this);\n    }\n\n    handleChangePlayersPerSide(e){\n        this.setState({ playersPerSide: e.currentTarget.value });\n    }\n\n    handleChangeCompleteTeamOneColor = (color) => {\n        this.setState({ color_one: color.hex });\n    }\n\n    handleChangeCompleteTeamTwoColor = (color) => {\n        this.setState({ color_two: color.hex });\n    }\n\n    handleChangeTeamOneName(e){\n        this.setState({ team_one_name: e.currentTarget.value });\n    }\n\n    handleChangeTeamTwoName(e){\n        this.setState({ team_two_name: e.currentTarget.value });\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        this.setState({ customisation: false });\n        this.props.teamsCustomisation(this.state);\n    }\n\n    handleClickCustomise(){\n        if (this.state.customisation) {\n            this.setState({ customisation: false });\n        } else {\n            this.setState({ customisation: true });\n        }       \n    }\n\n    render(){\n        // Show settings if Team Settings has been clicked\n        if (this.state.customisation){\n            return(\n                <Jumbotron                     \n                    className=\"customisation_jumbotron\"\n                >\n                    <h1\n                        onClick={ this.handleClickCustomise }\n                    >Team Settings &#9660;</h1>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Players Per Side</Form.Label>\n                            <Form.Control \n                                value= { this.state.playersPerSide }\n                                type=\"number\" step=\"1\"\n                                onChange={ this.handleChangePlayersPerSide }\n                            />\n                        </Form.Group>\n                        <div className=\"team_customisation\">\n                            {/* Team 1 Shirt Color and Name Picker */}\n                            <div className=\"individual_team_customisation\">\n                                <h3>Team 1</h3>\n                                <svg className='shirt' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><polygon points=\"357.3 50 326 51.3 280.7 106 256 110 226.7 106.7 182 46 11.7 123 47.7 235 112.3 217.7 119 457.7 389.7 457.7 393.7 214.3 464.3 241.7 500.3 131.7 \" fill={ this.state.color_one }/><path d=\"M362.7 42.7h-53.3c0 29.4-23.9 53.3-53.3 53.3s-53.3-23.9-53.3-53.3h-53.3L0 128l42.7 117.3 64-21.3V469.3h298.7V224l64 21.3L512 128 362.7 42.7zM456.4 218.5l-44.3-14.8L384 194.4v29.6 224H128v-224 -29.6l-28.1 9.4 -44.3 14.8 -29.4-80.9L155 64h29.4c9.2 30.8 37.8 53.3 71.6 53.3 33.8 0 62.4-22.5 71.6-53.3H357l128.8 73.6L456.4 218.5z\"/></svg>\n                                <SliderPicker color={ this.state.color_one } onChangeComplete={ this.handleChangeCompleteTeamOneColor }/>\n                                <Form.Label>Team Name</Form.Label>\n                                <Form.Control \n                                    type=\"text\"\n                                    value={ this.state.team_one_name }\n                                    onChange={ this.handleChangeTeamOneName}\n                                ></Form.Control>\n                            </div>\n\n                            {/* Team 2 Shirt Color and Name Picker */}\n                            <div className=\"individual_team_customisation\">\n                                <h3>Team 2</h3>\n                                <svg className='shirt' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><polygon points=\"357.3 50 326 51.3 280.7 106 256 110 226.7 106.7 182 46 11.7 123 47.7 235 112.3 217.7 119 457.7 389.7 457.7 393.7 214.3 464.3 241.7 500.3 131.7 \" fill={ this.state.color_two }/><path d=\"M362.7 42.7h-53.3c0 29.4-23.9 53.3-53.3 53.3s-53.3-23.9-53.3-53.3h-53.3L0 128l42.7 117.3 64-21.3V469.3h298.7V224l64 21.3L512 128 362.7 42.7zM456.4 218.5l-44.3-14.8L384 194.4v29.6 224H128v-224 -29.6l-28.1 9.4 -44.3 14.8 -29.4-80.9L155 64h29.4c9.2 30.8 37.8 53.3 71.6 53.3 33.8 0 62.4-22.5 71.6-53.3H357l128.8 73.6L456.4 218.5z\"/></svg>\n                                <SliderPicker color={ this.state.color_two } onChangeComplete={ this.handleChangeCompleteTeamTwoColor }/>\n                                <Form.Label>Team Name</Form.Label>\n                                <Form.Control \n                                    type=\"text\"\n                                    value={ this.state.team_two_name }\n                                    onChange={ this.handleChangeTeamTwoName}\n                                ></Form.Control>\n                            </div>\n                        </div>\n                        <Button\n                            variant=\"light\"\n                            onClick={ this.handleSubmit }\n                            className=\"save_button\"\n                        >Save Settings</Button>\n                    </Form>\n                </Jumbotron>\n            )\n        } else {\n            return(\n                <Jumbotron \n                    onClick={ this.handleClickCustomise }\n                    className=\"customisation_jumbotron\"\n                >\n                    <h1>Team Settings &#9654;</h1>\n                </Jumbotron>\n            )\n        }\n    }\n\n}\n\nexport default TeamsCustomisation;","import { connect } from 'react-redux';\n\nimport { teamsCustomisation } from '../../actions';\n\n\nimport TeamsCustomisation from './TeamsCustomisation';\n\nconst mapStateToProps = state => {\n    return {\n        playersPerSide: state.playersPerSide\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        teamsCustomisation: settings => dispatch(teamsCustomisation(settings))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamsCustomisation);","import React from 'react';\n\nimport AddPlayer from '../AddPlayer';\nimport CreatedPlayerList from '../CreatedPlayerList';\nimport GenerateTeamsButton from '../GenerateTeamsButton';\nimport ResetButton from '../ResetButton';\nimport TeamsCustomisation from '../TeamsCustomisation';\n\nconst TeamsSetup = ({ teamsPicked, generateButtonText, players, playersPerSide }) => (\n\n    <div style ={ { display: teamsPicked ? 'none' : 'block' } }>\n        <AddPlayer/>\n        <div \n        className=\"add_player_buttons\" \n        style={ { display: players.length === (playersPerSide * 2) ? \"flex\" : \"none\"} }>\n            <GenerateTeamsButton buttonText={ generateButtonText }/>\n            <ResetButton/>\n        </div>\n        <CreatedPlayerList/>\n        <TeamsCustomisation/>\n    </div>\n\n)\n\nexport default TeamsSetup;\n\n","import { connect } from \"react-redux\";\n\nimport TeamsSetup from './TeamsSetup';\n\nconst mapStateToProps = state => {\n    return {\n        teamsPicked: state.teamsPicked,\n        generateButtonText: 'Generate Teams',\n        players: state.players,\n        playersPerSide: state.playersPerSide\n\n    };\n};\n\nexport default connect(mapStateToProps)(TeamsSetup);","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nconst RandomisedTeams = ({ team1, team2, team_one_color, team_two_color, team_one_name, team_two_name }) => (\n\n    <div className=\"players_table\">\n        <Table>\n            <thead>\n                <tr>\n                    <td className='player_table_header'>{ team_one_name }</td>\n                    <td className='player_table_header'>{ team_two_name }</td>\n                </tr>\n            </thead>\n            <tbody>\n                { team1.map((player, index) => (\n                <tr key={ index }>\n                    <td>\n                        <div className=\"shirt_and_player_name\">\n                            <svg className='list_shirt' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                <polygon points=\"357.3 50 326 51.3 280.7 106 256 110 226.7 106.7 182 46 11.7 123 47.7 235 112.3 217.7 119 457.7 389.7 457.7 393.7 214.3 464.3 241.7 500.3 131.7 \" fill={ team_one_color }/>\n                                <path d=\"M362.7 42.7h-53.3c0 29.4-23.9 53.3-53.3 53.3s-53.3-23.9-53.3-53.3h-53.3L0 128l42.7 117.3 64-21.3V469.3h298.7V224l64 21.3L512 128 362.7 42.7zM456.4 218.5l-44.3-14.8L384 194.4v29.6 224H128v-224 -29.6l-28.1 9.4 -44.3 14.8 -29.4-80.9L155 64h29.4c9.2 30.8 37.8 53.3 71.6 53.3 33.8 0 62.4-22.5 71.6-53.3H357l128.8 73.6L456.4 218.5z\"/>\n                            </svg>\n                            <h5>{ player.name }</h5>\n                        </div>\n                    </td>\n                    <td>\n                        <div className=\"shirt_and_player_name\">\n                            <svg className='list_shirt' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                <polygon points=\"357.3 50 326 51.3 280.7 106 256 110 226.7 106.7 182 46 11.7 123 47.7 235 112.3 217.7 119 457.7 389.7 457.7 393.7 214.3 464.3 241.7 500.3 131.7 \" fill={ team_two_color }/>\n                                <path d=\"M362.7 42.7h-53.3c0 29.4-23.9 53.3-53.3 53.3s-53.3-23.9-53.3-53.3h-53.3L0 128l42.7 117.3 64-21.3V469.3h298.7V224l64 21.3L512 128 362.7 42.7zM456.4 218.5l-44.3-14.8L384 194.4v29.6 224H128v-224 -29.6l-28.1 9.4 -44.3 14.8 -29.4-80.9L155 64h29.4c9.2 30.8 37.8 53.3 71.6 53.3 33.8 0 62.4-22.5 71.6-53.3H357l128.8 73.6L456.4 218.5z\"/>\n                            </svg>\n                            <h5>{ team2[index].name }</h5>\n                        </div>\n                    </td>\n                </tr>   \n                ))}\n            </tbody>\n        </Table>\n    </div>\n    \n\n) \n\nexport default RandomisedTeams;","import { connect } from 'react-redux';\n\nimport RandomisedTeams from './RandomisedTeams';\n\nconst mapStateToProps = state => {\n    return {\n        team1: state.team1,\n        team2: state.team2,\n        team_one_color: state.team_one_color,\n        team_two_color: state.team_two_color,\n        team_one_name: state.team_one_name,\n        team_two_name: state.team_two_name\n    };\n};\n\nexport default connect(mapStateToProps)(RandomisedTeams);","import React from 'react';\n\nimport ResetButton from '../ResetButton';\nimport GenerateTeamsButton from '../GenerateTeamsButton';\nimport RandomisedTeams from '../RandomisedTeams';\n\nconst PickedTeams = ({ teamsPicked, generateButtonText }) => (\n\n    <div style ={ { display: teamsPicked ? 'block' : 'none' } }>\n        <RandomisedTeams/>\n        <div className=\"randomised_teams_buttons\">\n            <GenerateTeamsButton buttonText={ generateButtonText } />\n            <ResetButton/>\n        </div>\n    </div>\n\n)\n\nexport default PickedTeams;","import { connect } from \"react-redux\";\n\nimport PickedTeams from './PickedTeams';\n\nconst mapStateToProps = state => {\n    return {\n        teamsPicked: state.teamsPicked,\n        generateButtonText: 'Re-randomise Teams'\n    };\n};\n\nexport default connect(mapStateToProps)(PickedTeams);","import React from 'react';\nimport './App.scss';\n\nimport PageHeader from './Components/PageHeader/index';\nimport TeamsSetup from './Components/TeamsSetup';\nimport PickedTeams from './Components/PickedTeams';\n\nfunction App() {\n  return (\n    <>\n      <PageHeader/>\n      <TeamsSetup/>\n      <PickedTeams/>\n    </>\n  );\n}\n\nexport default App;\n","const initial = {\n    players: [],\n    team1: [],\n    team2: [],\n    teamsPicked: false,\n    playersPerSide: 5,\n    team_one_color: 'red',\n    team_two_color: 'blue',\n    team_one_name: 'Team 1',\n    team_two_name: 'Team 2'\n}\n\nexport default initial;","import initial from './initial';\n\nconst addPlayer = (state, action) => ({\n\n    ...state,\n    players: [...state.players, action.data]\n\n});\n\nconst deletePlayer = (state, action) => ({\n\n    ...state,\n    players: state.players.filter((player) => player.name !== action.id)\n});\n\n// Takes an array of players and randomly splices a player and then alternates inserting them into team 1/ team 2 \nconst randomTeams = ( current_state ) => {\n    let players = [...current_state.players];\n    let team1 = [];\n    let team2 = [];\n\n    for (let i = 0; i <= ((current_state.playersPerSide * 2) - 1); i += 1){\n\n        let rand = Math.floor(Math.random() * current_state.players.length);\n        let randomPlayer = current_state.players.splice(rand, 1);\n\n        if (current_state.players.length % 2 !== 0){\n            team1 = [...team1, randomPlayer[0]];\n        } else {\n            team2 = [...team2, randomPlayer[0]];\n        }\n    }\n\n    return [team1, team2, players];\n}\n\nconst setTeams = (state, generatedTeams) => ({\n\n    ...state,\n    team1: generatedTeams[0],\n    team2: generatedTeams[1],\n    players: generatedTeams[2],\n    teamsPicked: true\n\n});\n\nconst teamsCustomisation = (state, action) => ({\n\n    ...state,\n    playersPerSide: action.playersPerSide,\n    team_one_color: action.color_one,\n    team_two_color: action.color_two,\n    team_one_name: action.team_one_name,\n    team_two_name: action.team_two_name\n\n});\n\nconst reducer = (state, action) => {\n    switch (action.type){\n        case \"reset\": return {...initial};\n        case \"addPlayer\": return addPlayer(state, action); \n        case \"deletePlayer\": return deletePlayer(state, action);\n        case \"generateTeams\": { \n            const generatedTeams = randomTeams(state);\n            return(setTeams(state, generatedTeams));\n        }\n        case \"teamsCustomisation\": return teamsCustomisation(state, action);\n        default: return state;\n    };\n};\n\nexport default reducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport persistState from \"redux-localstorage\";\n\nimport initial from './Data/initial';\nimport reducer from './Data/reducer';\n\nconst composeEnhancers = \n     window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store = createStore(\n    reducer, \n    initial,\n    composeEnhancers(persistState())\n);\n\nReactDOM.render(\n    <Provider store={ store }>\n         <App/>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/soccer-ball.050bd8a0.svg\";"],"sourceRoot":""}